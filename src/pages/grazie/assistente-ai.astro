---
import Layout from '@/layouts/PageLayout.astro';

const metadata = {
  title: 'Grazie! — Assistente AI (Setup)',
  description: 'Grazie per l’acquisto. Ecco i prossimi step per attivare il tuo Assistente AI su Sito & WhatsApp.',
  canonical: '/grazie/assistente-ai',
  robots: { index: false, follow: false }, // le pagine "grazie" non dovrebbero indicizzarsi
};

// Link configurabili via env
const wa = import.meta.env.PUBLIC_WHATSAPP_DEMO_LINK || '#'; // già usato nella pagina servizio
const onboardingForm = import.meta.env.PUBLIC_ONBOARDING_FORM_URL || '#'; // es. Google Form/Typeform
const calendarLink = import.meta.env.PUBLIC_ONBOARDING_CALENDAR_URL || '#'; // es. Calendly/Google Calendar booking
---

<Layout metadata={metadata}>
  <section class="relative overflow-hidden">
    <div class="absolute inset-0 -z-10 bg-gradient-to-b from-emerald-100 via-white to-white dark:from-emerald-900/30 dark:via-transparent"></div>
    <div class="container mx-auto px-6 pt-16 pb-10 text-center">
      <div class="inline-flex items-center justify-center w-14 h-14 rounded-full bg-emerald-500 text-white text-2xl">✓</div>
      <h1 class="mt-4 text-3xl md:text-5xl font-extrabold tracking-tight">Grazie per l’acquisto!</h1>
      <p class="mt-4 max-w-2xl mx-auto text-neutral-600 dark:text-neutral-300">
        Abbiamo ricevuto il pagamento del <strong>Setup Assistente AI</strong>.
        Ti guidiamo subito nei prossimi step per andare online in pochi giorni.
      </p>
      <div class="mt-6 flex flex-wrap justify-center gap-3">
        {onboardingForm !== '#' && (
          <a href={onboardingForm} target="_blank" rel="noopener"
             class="inline-flex items-center justify-center rounded-full px-5 py-3 text-white bg-emerald-600 hover:bg-emerald-700 transition">
            Compila il modulo di onboarding
          </a>
        )}
        {calendarLink !== '#' && (
          <a href={calendarLink} target="_blank" rel="noopener"
             class="inline-flex items-center justify-center rounded-full px-5 py-3 border border-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800">
            Prenota la call di avvio
          </a>
        )}
        <a href="/" class="inline-flex items-center justify-center rounded-full px-5 py-3 bg-black text-white hover:opacity-90">
          Torna alla Home
        </a>
      </div>
    </div>
  </section>

  <section class="container mx-auto px-6 py-10">
    <div class="grid md:grid-cols-3 gap-6">
      <div class="rounded-2xl p-6 ring-1 ring-neutral-200 dark:ring-neutral-800 bg-white/70 dark:bg-neutral-900/50 shadow-sm">
        <h3 class="font-semibold text-lg mb-2">1) Modulo di onboarding</h3>
        <p class="text-neutral-600 dark:text-neutral-300">
          Inviaci <strong>FAQ reali</strong>, link al sito/menù/listino, policy, orari, recapiti WhatsApp.
          È il materiale che useremo per addestrare l’assistente.
        </p>
      </div>
      <div class="rounded-2xl p-6 ring-1 ring-neutral-200 dark:ring-neutral-800 bg-white/70 dark:bg-neutral-900/50 shadow-sm">
        <h3 class="font-semibold text-lg mb-2">2) Call di avvio</h3>
        <p class="text-neutral-600 dark:text-neutral-300">
          Allineiamo obiettivi, tono di voce, messaggi chiave ed eventuali <em>flow</em> di disponibilità/inoltro a umano.
        </p>
      </div>
      <div class="rounded-2xl p-6 ring-1 ring-neutral-200 dark:ring-neutral-800 bg-white/70 dark:bg-neutral-900/50 shadow-sm">
        <h3 class="font-semibold text-lg mb-2">3) Integrazione & Go-live</h3>
        <p class="text-neutral-600 dark:text-neutral-300">
          Inseriamo il widget sul sito, abilitiamo WhatsApp, testiamo casi reali e andiamo online. Tempi stimati: 5–10 gg.
        </p>
      </div>
    </div>

    <div class="mt-10 rounded-2xl p-6 ring-1 ring-neutral-200 dark:ring-neutral-800 bg-neutral-50 dark:bg-neutral-900/40">
      <h2 class="text-xl font-bold mb-2">Dettagli transazione</h2>
      <p class="text-neutral-700 dark:text-neutral-300">
        Piano: <strong data-plan>—</strong> · Importo: <strong data-amount>—</strong> · Transazione: <strong data-tx>—</strong>
      </p>
      <p class="text-sm mt-3 text-neutral-600 dark:text-neutral-400">
        Riceverai una email di conferma PayPal. Per assistenza rapida, scrivici su WhatsApp.
      </p>
      <div class="mt-3">
        <a href={wa} target="_blank" rel="noopener"
           class="inline-flex items-center rounded-full px-4 py-2 border border-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800">
          Contatta supporto su WhatsApp
        </a>
      </div>
    </div>
  </section>

  <!-- Script: legge i parametri dalla query string e (se presente gtag) invia evento -->
  <script is:inline>
    (function () {
      const p = new URLSearchParams(location.search);
      const plan = p.get('plan') || 'Setup';
      const amount = p.get('amount') ? (p.get('amount') + ' €') : '—';
      const tx = p.get('tx') || p.get('transaction_id') || p.get('paymentId') || '—';
      document.querySelectorAll('[data-plan]').forEach(el => el.textContent = plan);
      document.querySelectorAll('[data-amount]').forEach(el => el.textContent = amount);
      document.querySelectorAll('[data-tx]').forEach(el => el.textContent = tx);

      // Tracciamento opzionale GA4 (se gtag presente) solo quando status=success
      if (window.gtag && (p.get('status') === 'success' || p.get('success') === 'true')) {
        const val = parseFloat(p.get('amount'));
        window.gtag('event', 'purchase', {
          currency: 'EUR',
          value: isNaN(val) ? undefined : val,
          items: [{ item_name: 'Assistente AI — Setup', item_variant: plan }]
        });
      }
    })();
  </script>
</Layout>