---
import Layout from '@/layouts/PageLayout.astro';
import { getCollection, render as renderEntry } from 'astro:content';

export const prerender = true;

const short = (s = '', n = 38) => (s?.length > n ? s.slice(0, n) + '…' : s ?? '');
const toDate = (v) => (v instanceof Date ? v : (typeof v === 'string' && v ? new Date(v) : new Date(0)));

export async function getStaticPaths() {
  const all = await getCollection('portfolio');
  return all.map((e) => ({ params: { slug: e.data.slug } }));
}

const { slug } = Astro.params;

const all = await getCollection('portfolio');
const ordered = all
  .slice()
  .sort(
    (a, b) =>
      toDate(b.data.publishDate) - toDate(a.data.publishDate) ||
      String(a.data.slug).localeCompare(String(b.data.slug))
  );

const entry = ordered.find((e) => e.data.slug === slug);
if (!entry) throw new Error(`Portfolio non trovato: ${slug}`);

const d = entry.data;
const { Content } = await renderEntry(entry);

const idx = ordered.findIndex((e) => e.data.slug === slug);
const prev = idx > 0 ? ordered[idx - 1] : null;
const next = idx < ordered.length - 1 ? ordered[idx + 1] : null;

const metadata = d.metadata ?? { title: d.title };
---

<Layout metadata={metadata}>
  <section class="container mx-auto px-6 py-12">
    <div class="grid grid-cols-1 lg:grid-cols-[1.2fr,1fr] gap-8 items-start">
      {d.image?.src && (
        <img
          src={d.image.src}
          alt={d.image.alt ?? d.title}
          width={d.image.width ?? 1200}
          height={d.image.height ?? 800}
          class="w-full rounded-2xl shadow object-cover"
          loading="eager"
        />
      )}
      <div>
        <h1 class="text-4xl font-bold mb-3 dark:text-white">{d.title}</h1>
        {d.description && <p class="text-gray-600 dark:text-gray-300 mb-4">{d.description}</p>}
        {d.category && <p class="mt-2"><strong>Categoria:</strong> {d.category}</p>}
        {d.technologies?.length && (
          <p class="mt-2"><strong>Tecnologie:</strong> {d.technologies.join(', ')}</p>
        )}
      </div>
    </div>

    <!-- ✅ Tipografia con inversione automatica in dark -->
    <div class="prose prose-slate lg:prose-lg dark:prose-invert max-w-none mt-10">
      <Content />
    </div>

    <nav class="mt-12 flex justify-between text-sm">
      {prev ? (
        <a href={`/portfolio/${prev.data.slug}`} class="text-primary hover:underline">
          ← {short(prev.data.title)}
        </a>
      ) : <span></span>}
      {next ? (
        <a href={`/portfolio/${next.data.slug}`} class="text-primary hover:underline">
          {short(next.data.title)} →
        </a>
      ) : <span></span>}
    </nav>
  </section>
</Layout>