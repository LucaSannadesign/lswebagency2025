---
import Layout from '@/layouts/PageLayout.astro';
import { getCollection } from 'astro:content';

const PER_PAGE = 12;

const metadata = {
  title: 'Portfolio | Ultimi lavori — LS Web Agency',
  description: 'Una selezione dei lavori realizzati: siti web, e-commerce e progetti digitali.',
  canonical: '/portfolio',
  openGraph: { url: '/portfolio', type: 'website' },
};

// util: timestamp sicuro (0 se assente/invalid) per finire in fondo
const ts = (v: unknown) => {
  const d = v instanceof Date ? v : (typeof v === 'string' && v ? new Date(v) : null);
  return d && !Number.isNaN(d.getTime()) ? d.getTime() : 0;
};

const items = await getCollection('portfolio');

const sorted = items
  .filter((e) => !((e.data as any)?.draft === true))
  .slice()
  .sort((a, b) => {
    const tb = ts(b.data.publishDate ?? b.data.updateDate);
    const ta = ts(a.data.publishDate ?? a.data.updateDate);
    return tb - ta || String(a.data.slug || '').localeCompare(String(b.data.slug || ''));
  });

const totalPages = Math.max(1, Math.ceil(sorted.length / PER_PAGE));
const currentPage = 1;
const start = 0;
const end = PER_PAGE;
const pageItems = sorted.slice(start, end);
---

<Layout metadata={metadata}>
  <!-- Testata con gradiente coerente -->
  <section class="relative overflow-hidden isolate">
    <div
      aria-hidden="true"
      class="pointer-events-none absolute inset-x-0 top-0 -z-10 h-[340px]
             bg-gradient-to-b from-violet-100/80 via-white to-transparent
             dark:from-violet-900/40 dark:via-transparent">
    </div>

    <div class="container mx-auto px-6 pt-14 md:pt-16 pb-6">
      <h1 class="text-3xl md:text-5xl font-extrabold leading-tight">
        <span class="bg-clip-text text-transparent bg-gradient-to-r
                     from-violet-700 via-fuchsia-500 to-pink-500
                     dark:from-violet-400 dark:via-fuchsia-400 dark:to-pink-300">
          Portfolio
        </span>
      </h1>
      <p class="mt-3 text-base md:text-lg text-neutral-700 dark:text-neutral-300 max-w-prose">
        Gli ultimi progetti pubblicati: siti web, e-commerce e soluzioni su misura.
      </p>
    </div>
  </section>

  <!-- Griglia -->
  <section class="container mx-auto px-6 pb-10">
    {pageItems.length === 0 ? (
      <p class="text-center text-neutral-600 dark:text-neutral-300">Nessun progetto pubblicato al momento.</p>
    ) : (
      <div class="grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {pageItems.map((item) => {
          const hrefRaw = item.data.permalink ?? `/portfolio/${item.data.slug}`;
          const href = String(hrefRaw).replace(/\/+$/, '');
          const img = item.data.image as
            | { src: string; alt?: string; width?: number; height?: number }
            | undefined;

          return (
            <article class="rounded-xl overflow-hidden ring-1 ring-neutral-200 dark:ring-neutral-800 bg-white/80 dark:bg-neutral-900/50 hover:shadow-md transition">
              <a href={href} aria-label={`Apri: ${item.data.title}`} class="block">
                {img?.src && (
                  <img
                    src={img.src}
                    alt={img.alt ?? item.data.title}
                    width={img.width ?? 1200}
                    height={img.height ?? 800}
                    loading="lazy"
                    decoding="async"
                    class="w-full object-cover aspect-[3/2]"
                  />
                )}
                <div class="p-4">
                  <h2 class="text-base font-semibold mb-1 line-clamp-2">{item.data.title}</h2>
                  {item.data.description && (
                    <p class="text-sm text-neutral-700 dark:text-neutral-300 line-clamp-3">{item.data.description}</p>
                  )}
                </div>
              </a>
            </article>
          );
        })}
      </div>
    )}
  </section>

  <!-- Paginazione -->
  {totalPages > 1 && (
    <nav class="container mx-auto px-6 pb-16" aria-label="Paginazione portfolio">
      <ul class="flex flex-wrap items-center justify-center gap-2">
        {/* Prev disabilitato in pagina 1 */}
        <li>
          <span class="px-3 py-2 rounded-md ring-1 ring-neutral-200 dark:ring-neutral-800 text-neutral-400 cursor-not-allowed">
            ← Precedente
          </span>
        </li>

        {Array.from({ length: totalPages }, (_, i) => i + 1).map((n) => (
          <li>
            {n === currentPage ? (
              <span class="px-3 py-2 rounded-md bg-neutral-900 text-white dark:bg-white dark:text-neutral-900">
                {n}
              </span>
            ) : (
              <a
                href={n === 1 ? '/portfolio' : `/portfolio/page/${n}`}
                class="px-3 py-2 rounded-md ring-1 ring-neutral-200 dark:ring-neutral-800 hover:bg-neutral-100 dark:hover:bg-neutral-800"
              >
                {n}
              </a>
            )}
          </li>
        ))}

        {/* Next */}
        <li>
          <a
            href={'/portfolio/page/2'}
            class="px-3 py-2 rounded-md ring-1 ring-neutral-200 dark:ring-neutral-800 hover:bg-neutral-100 dark:hover:bg-neutral-800"
          >
            Successiva →
          </a>
        </li>
      </ul>
    </nav>
  )}
</Layout>