---
/* === Global HEAD + SEO sane defaults ===================================== */

import "@/assets/styles/tailwind.css";
import { I18N } from "astrowind:config";

import Favicons from "@/components/Favicons.astro";
import CustomStyles from "@/components/CustomStyles.astro";
import ApplyColorMode from "@/components/common/ApplyColorMode.astro";
import SiteVerification from "@/components/common/SiteVerification.astro";
import BasicScripts from "@/components/common/BasicScripts.astro";
// ⛔️ Tenere fuori qui componenti che iniettano nuovamente meta OG/Twitter/Title
//    (es. CommonMeta/Metadata/Analytics duplicanti) per evitare conflitti.

import { ClientRouter } from "astro:transitions";
import type { MetaData as MetaDataType } from "@/types";

export interface Props {
  metadata?: MetaDataType & {
    /** Opzionale: uno o più blocchi JSON-LD da iniettare nel <head> della singola pagina */
    jsonLd?: Record<string, any> | Record<string, any>[];
  };
}

/* ----------------------------- Helpers ---------------------------------- */
const SITE_TITLE = "LS Web Agency";
const siteBase = (Astro.site?.toString?.() || "https://lswebagency.com").replace(/\/+$/, "");
const toAbs = (u: string) => (u?.startsWith("http") ? u : `${siteBase}${u?.startsWith("/") ? "" : "/"}${u}`);

const md = (Astro.props.metadata ?? {}) as Props["metadata"];

/* ------------------------------ Title ----------------------------------- */
// Rispetta ignoreTitleTemplate ed evita doppi "LS Web Agency"
const rawTitle = (md?.title ?? SITE_TITLE).trim();
const useTemplate = md?.ignoreTitleTemplate ? false : true;
const pageTitle =
  useTemplate && rawTitle !== SITE_TITLE && !rawTitle.includes(SITE_TITLE)
    ? `${rawTitle} — ${SITE_TITLE}`
    : rawTitle;

/* --------------------------- Description -------------------------------- */
const pageDescription =
  md?.description ??
  "Creazione siti web professionali, SEO e marketing digitale. Soluzioni su misura per aziende e professionisti.";

/* ----------------------------- Robots ----------------------------------- */
const robotsCfg = md?.robots ?? { index: true, follow: true };
const robotsContent = [
  robotsCfg.index === false ? "noindex" : "index",
  robotsCfg.follow === false ? "nofollow" : "follow",
].join(", ");

/* ---------------------------- Canonical --------------------------------- */
const canonicalIn = md?.canonical ?? Astro.url?.pathname ?? "/";
const canonicalUrl = canonicalIn.startsWith("http")
  ? canonicalIn
  : `${siteBase}${canonicalIn.startsWith("/") ? "" : "/"}${canonicalIn}`;

/* ----------------------- Open Graph / Twitter --------------------------- */
const og = md?.openGraph ?? {};
const ogType = og.type ?? "website";
const ogSiteName = og.siteName ?? SITE_TITLE;

const ogUrl = toAbs(og.url ?? canonicalUrl);

// ✅ Fallback immagine social unificato su /images/default-og-image.jpg
const ogImagesRaw =
  Array.isArray(og.images) && og.images.length > 0
    ? og.images
    : [{ url: "/images/default-og-image.jpg", width: 1200, height: 628 }];
const ogImages = ogImagesRaw.map((img) => ({ ...img, url: toAbs(img.url) }));

const tw = md?.twitter ?? {};
const twCard = tw.cardType ?? "summary_large_image";
const twImage = ogImages[0]?.url ?? toAbs("/images/default-og-image.jpg");
const twHandle = tw.handle ?? "@lswebagency";
const twSite = tw.site ?? "@lswebagency";

/* --------------------------- JSON-LD per pagina ------------------------- */
const jsonLdBlocks = md?.jsonLd
  ? (Array.isArray(md.jsonLd) ? md.jsonLd : [md.jsonLd]).filter(Boolean)
  : [];
---

<!doctype html>
<html lang={I18N.language} dir={I18N.textDirection} class="2xl:text-[20px]">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- =========================
         Primary meta
    ========================== -->
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <meta name="robots" content={robotsContent} />
    <link rel="canonical" href={canonicalUrl} />

    <!-- =========================
         Open Graph
    ========================== -->
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={ogUrl} />
    <meta property="og:site_name" content={ogSiteName} />
    {ogImages.map((img) => (
      <>
        <meta property="og:image" content={img.url} />
        <meta property="og:image:secure_url" content={img.url} />
        {img.width && <meta property="og:image:width" content={String(img.width)} />}
        {img.height && <meta property="og:image:height" content={String(img.height)} />}
      </>
    ))}

    <!-- =========================
         Twitter
    ========================== -->
    <meta name="twitter:card" content={twCard} />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDescription} />
    <meta name="twitter:image" content={twImage} />
    <meta name="twitter:site" content={twSite} />
    <meta name="twitter:creator" content={twHandle} />

    <!-- =========================
         Favicons / Styles / Color mode
    ========================== -->
    <Favicons />
    <CustomStyles />
    <ApplyColorMode />

    <!-- =========================
         Site verification (Search Console, ecc.)
    ========================== -->
    <SiteVerification />

    <!-- =========================
         Perf hints
    ========================== -->
    <link rel="preconnect" href="https://www.paypal.com" crossorigin />
    <link rel="dns-prefetch" href="https://www.paypal.com" />
    <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin />
    <link rel="dns-prefetch" href="https://www.googletagmanager.com" />

    <!-- =========================
         Client-side transitions
    ========================== -->
    <ClientRouter fallback="swap" />

    <!-- =========================
         Google Analytics
         (rimosso qui: ora è caricato da CookieConsent.astro dopo consenso)
    ========================== -->

    <!-- =========================
         JSON-LD per pagina (se passato via metadata.jsonLd)
    ========================== -->
    {jsonLdBlocks.map((block) => (
      <script type="application/ld+json" is:inline>{JSON.stringify(block)}</script>
    ))}
  </head>

  <body class="antialiased text-default bg-page tracking-tight">
    <slot />
    <BasicScripts />
  </body>
</html>
