---
type HeadlineClasses = {
  container?: string;
  title?: string;
  subtitle?: string;
  [k: string]: any;
};

type ClassesProp = {
  headline?: HeadlineClasses;
};

const {
  title = '',
  subtitle = '',
  tagline = '',
  classes = {} as ClassesProp,
} = Astro.props as {
  title?: string;
  subtitle?: string;
  tagline?: string;
  classes?: ClassesProp;
};

// base di default
const headlineBase: HeadlineClasses = {
  container: 'mb-12 text-center max-w-3xl mx-auto',
  title: 'text-3xl md:text-4xl font-bold tracking-tight font-heading text-heading',
  subtitle: 'mt-4 text-muted text-xl',
};

// merge sicuro (niente spread su undefined)
const headlineMerged: HeadlineClasses = {
  ...headlineBase,
  ...(classes && typeof classes.headline === 'object' ? classes.headline : {}),
};
---

<!-- Se usi un tuo componente Headline: -->
<!-- <Headline title={title} subtitle={subtitle} tagline={tagline} classes={headlineMerged} /> -->

<!-- In alternativa, markup inline equivalente (eviti import): -->
<div class={headlineMerged.container}>
  {tagline && (
    <p class="text-sm font-semibold uppercase tracking-wider text-accent">
      {tagline}
    </p>
  )}
  {title && <h2 class={headlineMerged.title}>{title}</h2>}
  {subtitle && <p class={headlineMerged.subtitle}>{subtitle}</p>}
</div>