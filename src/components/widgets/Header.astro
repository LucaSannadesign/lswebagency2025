---
import { Icon } from 'astro-icon/components';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu  from '~/components/common/ToggleMenu.astro';
import Button      from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: MenuLink[];
}

export interface Props {
  id?: string;
  links?: MenuLink[];
  actions?: CallToAction[];
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

// percorso attuale, per evidenziare il link attivo
const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="relative mx-auto flex items-center justify-between px-4 py-3 md:px-6 max-w-7xl">
    <!-- logo + hamburger -->
    <div class="flex items-center">
      <a href={getHomePermalink()} class="flex items-center">
        <img src="/images/logo-ls-webdesignagency-2025.svg" alt="LS Web Agency" class="h-10 w-auto dark:hidden" />
        <img src="/images/logo-ls-webdesignagency-2025-bn.svg" alt="LS Web Agency" class="hidden h-10 w-auto dark:block" />
      </a>
      <div class="ml-4 md:hidden">
        <ToggleMenu />
      </div>
    </div>

    <!-- nav links -->
    <nav class="hidden md:flex md:mx-5" aria-label="Main navigation">
      <ul class="flex items-center space-x-2 text-base font-medium">
  {links.map((link) => {
    const hasSub = Array.isArray(link.links) && link.links.length > 0;
    return (
      <li class="relative group">
        <!-- Link principale (cliccabile) -->
        <a
          href={link.href}
          class:list={[
            'flex items-center px-4 py-3 hover:text-link dark:hover:text-white whitespace-nowrap',
            { 'text-link': link.href === currentPath },
          ]}
        >
          {link.text}
          {hasSub && (
            <Icon
              name="tabler:chevron-down"
              class="ml-1 w-3.5 h-3.5 hidden md:inline"
            />
          )}
        </a>

        <!-- Dropdown -->
        {hasSub && (
          <ul
            class="
              absolute top-full left-0 mt-1   /* spazio tra link e menu: sostituisci mt-1 con -mt-2 per risalire di 8px */
              hidden min-w-[200px]
              rounded bg-white/90 dark:bg-dark backdrop-blur-md
              group-hover:block drop-shadow-xl z-10
            "
          >
            {link.links!.map((sub) => (
              <li>
                <a
                  href={sub.href}
                  class:list={[
                    'block px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 whitespace-nowrap',
                    { 'text-link': sub.href === currentPath },
                  ]}
                >
                  {sub.text}
                </a>
              </li>
            ))}
          </ul>
        )}
      </li>
    );
  })}
</ul>
    </nav>

    <!-- theme switch, rss e call-to-action -->
    <div class="hidden md:flex items-center space-x-4">
      {showToggleTheme && <ToggleTheme iconClass="w-6 h-6" />}
      {showRssFeed && (
        <a
          href={getAsset('/rss.xml')}
          aria-label="RSS Feed"
          class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700"
        >
          <Icon name="tabler:rss" class="w-5 h-5" />
        </a>
      )}
      {actions.map((btn) => (
        <Button {...btn} class="ml-2 py-2.5 px-5 font-semibold text-sm" />
      ))}
    </div>
  </div>
</header>