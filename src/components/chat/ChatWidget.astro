---
/* ChatWidget.astro â€“ LS Web Agency */

const {
  PUBLIC_CHAT_ENABLED = 'true',
  PUBLIC_CHAT_BADGE = 'Chatta con noi',
  PUBLIC_CHAT_GREETING = 'Ciao! ðŸ‘‹ Sono lâ€™assistente LS. Scrivimi pure una domanda.',
  PUBLIC_CHAT_SLA_MINUTES = '30',
  PUBLIC_CHAT_WORK_HOURS = 'Mon-Fri 09:30-18:30 Europe/Rome',
  PUBLIC_CHAT_CHANNELS = 'web,whatsapp',
  PUBLIC_CHAT_REQUIRE_EMAIL = 'true',

  PUBLIC_WHATSAPP_NUMBER = '',
  PUBLIC_WHATSAPP_GREETING = 'Ciao LS Web Agency, vorrei informazioni sui servizi.',
  PUBLIC_TELEGRAM_LINK = '',
} = import.meta.env;

const CHANNELS = String(PUBLIC_CHAT_CHANNELS || '').split(',').map((s) => s.trim());
const canWeb = CHANNELS.includes('web');
const canWa  = CHANNELS.includes('whatsapp');

const waHref = PUBLIC_WHATSAPP_NUMBER
  ? `https://wa.me/${PUBLIC_WHATSAPP_NUMBER}?text=${encodeURIComponent(PUBLIC_WHATSAPP_GREETING)}`
  : null;

const tgHref = (PUBLIC_TELEGRAM_LINK || '').trim() || null;

const WIDGET_ID = 'ls-chat-widget';
---

{PUBLIC_CHAT_ENABLED === 'true' && (
  <div id={WIDGET_ID} class="z-[60] fixed bottom-4 right-4 md:bottom-6 md:right-6">
    <!-- FAB -->
    <button
      id="ls-chat-toggle"
      type="button"
      class="rounded-full px-4 py-3 shadow-lg bg-violet-600 text-white font-semibold hover:bg-violet-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-violet-300"
      aria-haspopup="dialog"
      aria-controls="ls-chat-panel"
    >
      {PUBLIC_CHAT_BADGE}
    </button>

    <!-- PANEL -->
    <div
      id="ls-chat-panel"
      data-open="false"
      data-wa={waHref || ''}
      class="hidden w-[92vw] max-w-[390px] mt-3 rounded-2xl border border-neutral-200 dark:border-neutral-800 bg-white dark:bg-neutral-900 shadow-xl overflow-hidden"
      role="dialog"
      aria-modal="true"
      aria-labelledby="ls-chat-title"
    >
      <!-- Header -->
      <div class="p-4 border-b border-neutral-200 dark:border-neutral-800 flex items-start gap-3">
        <div class="shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-violet-600 to-fuchsia-500"></div>
        <div class="min-w-0">
          <h3 id="ls-chat-title" class="font-semibold leading-tight">LS Web Agency</h3>
          <p class="text-sm text-neutral-600 dark:text-neutral-400">{PUBLIC_CHAT_GREETING}</p>
          <p class="mt-1 text-xs text-neutral-500">
            Risposta entro ~{PUBLIC_CHAT_SLA_MINUTES} min Â· {PUBLIC_CHAT_WORK_HOURS}
          </p>
        </div>
        <button
          type="button"
          id="ls-chat-close"
          class="ml-auto p-2 rounded hover:bg-neutral-100 dark:hover:bg-neutral-800"
          aria-label="Chiudi chat"
        >
          âœ•
        </button>
      </div>

      <!-- Canali rapidi: sotto header, sopra tutto il resto -->
      {(canWa || tgHref) && (
        <div class="p-3 flex gap-2 border-b border-neutral-200 dark:border-neutral-800">
          {canWa && waHref && (
            <a
              href={waHref}
              target="_blank"
              rel="noopener nofollow"
              class="flex-1 inline-flex items-center justify-center gap-2 rounded-xl bg-emerald-600 text-white font-medium px-3 py-2.5 hover:bg-emerald-700"
              aria-label="Apri WhatsApp"
            >
              <!-- icona semplificata -->
              <svg viewBox="0 0 24 24" width="18" height="18" fill="currentColor" aria-hidden="true">
                <path d="M20 3.5A10.5 10.5 0 0 0 4.2 18.9L3 22l3.2-1.1A10.4 10.4 0 1 0 20 3.5Zm-8.6 3.4c-.3 0-.7 0-1 .5s-1.2 1.2-1.2 2.8 1.2 3.2 1.4 3.4 2.4 3.7 5.8 4.9c2.9 1.1 3.5.9 4.1.8s2-.8 2.3-1.6.3-1.5.2-1.6c-.1-.1-.3-.2-.7-.4s-2.1-1.1-2.4-1.2-.6-.2-.9.2-1 1.2-1.2 1.4-.4.3-.8.1-1.6-.6-3.1-1.9c-1.2-1.1-2-2.5-2.2-2.9s0-.6.2-.8.5-.6.7-.9.2-.5 0-.8-.9-2.2-1.2-2.7-.6-.5-.9-.5Z"/>
              </svg>
              WhatsApp
            </a>
          )}
          {tgHref && (
            <a
              href={tgHref}
              target="_blank"
              rel="noopener nofollow"
              class="flex-1 inline-flex items-center justify-center gap-2 rounded-xl bg-sky-600 text-white font-medium px-3 py-2.5 hover:bg-sky-700"
              aria-label="Apri Telegram"
            >
              <svg viewBox="0 0 24 24" width="18" height="18" fill="currentColor" aria-hidden="true">
                <path d="M9.9 15.6 9.6 20c.4 0 .7-.2 1-.4l2.4-2.2 4.9 3.6c.9.5 1.6.2 1.8-.9l3.2-15.1c.3-1.3-.5-1.9-1.4-1.6L1.7 8.9C.4 9.4.4 10.1 1.5 10.4l6.6 2.1 10.3-6.5c.5-.3.9-.1.5.2L9.9 15.6Z"/>
              </svg>
              Telegram
            </a>
          )}
        </div>
      )}

      <!-- Gate: nome+email (se richiesto) -->
      <div id="ls-gate" class="p-4 space-y-3 hidden">
        <div>
          <label class="text-sm font-medium">Nome*</label>
          <input
            id="ls-name"
            required
            class="mt-1 w-full rounded-lg border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 px-3 py-2"
          />
        </div>
        <div>
          <label class="text-sm font-medium">Email*</label>
          <input
            id="ls-email"
            type="email"
            required
            class="mt-1 w-full rounded-lg border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 px-3 py-2"
          />
        </div>
        <button
          id="ls-save-profile"
          class="w-full inline-flex items-center justify-center rounded-lg bg-violet-600 text-white px-4 py-2.5 font-semibold hover:bg-violet-700"
        >
          Inizia la chat
        </button>
        <p class="text-xs text-neutral-500">
          Iniziando accetti la nostra <a href="/privacy" class="underline">Privacy & Cookie Policy</a>.
        </p>
      </div>

      <!-- Corpo chat -->
      <div id="ls-chat-body" class="flex flex-col">
        <div id="ls-messages" class="p-4 space-y-3 max-h-[55vh] overflow-y-auto"></div>

        <!-- Suggerimenti rapidi -->
        <div id="ls-quick" class="px-4 pb-3 flex flex-wrap gap-2"></div>

        <!-- Composer -->
        {canWeb && (
          <form id="ls-composer" class="p-3 border-t border-neutral-200 dark:border-neutral-800 flex gap-2">
            <input
              id="ls-input"
              autocomplete="off"
              placeholder="Scrivi qui la tua domandaâ€¦"
              class="flex-1 rounded-lg border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 px-3 py-2"
            />
            <button class="rounded-lg bg-violet-600 text-white px-4 py-2 font-semibold hover:bg-violet-700">Invia</button>
          </form>
        )}
      </div>
    </div>
  </div>
)}

<style is:global>
  .ls-bot { background: #f6f6f7; color: #111; }
  .dark .ls-bot { background: #15171a; color: #e5e7eb; }
  .ls-you { background: #6d28d9; color: #fff; }
  .ls-bubble { border-radius: 14px; padding: 10px 12px; max-width: 85%; }
  .ls-pill {
    border-radius: 9999px;
    padding: 6px 12px;
    font-size: 0.875rem;
    border: 1px solid rgba(0,0,0,.1);
    background: #fff;
  }
  .dark .ls-pill { border-color: rgba(255,255,255,.15); background: #0f1115; color: #e5e7eb; }
</style>

<script is:inline>
  // ===== Store persistente =====
  const STORE_KEY = 'ls_chat_state_v2';
  const STORE = { open:false, profile:null, messages:[] };
  const persist = () => { try{ localStorage.setItem(STORE_KEY, JSON.stringify(STORE)); }catch{} };
  (function load(){ try{ Object.assign(STORE, JSON.parse(localStorage.getItem(STORE_KEY)||'{}')); }catch{} })();

  // ===== Utils =====
  const L = (s='') => s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu,'');
  const mqMobile = window.matchMedia('(max-width: 767px)');
  const isMobile = () => mqMobile.matches;
  const escapeHtml = (s='') => s.replace(/[&<>"]/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[m]));

  // ===== Link mapping =====
  const LINKS = {
    servizi:'/servizi', contatti:'/contatti', pagamenti:'/pagamenti',
    prezziSiti:'/servizi/creazione-siti-web-sassari#pacchetti',
    prezziEcom:'/servizi/realizzazione-siti-ecommerce#pacchetti',
    localSEO:'/servizi/local-seo-booster',
    cwv:'/servizi/ottimizzazione-seo-siti-web#core-web-vitals',
    branding:'/servizi/branding-e-grafica-siti-web',
    access:'/servizi/accessibilita-digitale-avanzata',
    uxai:'/servizi/personalizzazione-ux-intelligenza-artificiale',
    ai:'/servizi/assistente-ai-sito-whatsapp',
    wpSlim:'/servizi/wordpress-slim-siti-statici-headless',
    voucher:'/servizi/voucher-digitali-sassari',
    portfolio:'/portfolio', blog:'/blog'
  };

  // ===== Intent â€“ risposte pronte =====
  const INTENTS = [
    { rx: /(quanto|prezz[i|o]|listino|cost[oi]|tariff|preventiv)/,
      html: `Ecco i prezzi e cosa include ogni pacchetto:<br>
        â€¢ <b>Siti Web</b> ðŸ‘‰ <a class="underline" href="${LINKS.prezziSiti}">Pacchetti & Prezzi</a><br>
        â€¢ <b>E-commerce</b> ðŸ‘‰ <a class="underline" href="${LINKS.prezziEcom}">Pacchetti & Prezzi</a><br>
        Possiamo adattare funzioni e budget. Vuoi un consiglio sul pacchetto giusto?`
    },
    { rx: /(cosa.*includ|cosa.*compr|pacchett|base|pro|avanzat)/,
      html: `In breve:<br>
        â€¢ <b>Base</b>: vetrina + SEO on-page + contatti/WhatsApp.<br>
        â€¢ <b>Pro</b>: performance <b>Core Web Vitals</b>, blog, schema, tracciamenti.<br>
        â€¢ <b>Avanzato</b>: statico/headless, componenti custom, integrazioni.<br>
        Dettagli in <a class="underline" href="${LINKS.prezziSiti}">Siti Web</a>.`
    },
    { rx: /(tempo|tempi|tempistic|consegn|durat|quando.*pronto)/,
      html: `Tempistiche tipiche:<br>
        â€¢ <b>Sito vetrina</b>: 2â€“4 settimane Â· <b>E-commerce</b>: 4â€“8 settimane.<br>
        Processo: Analisi â†’ UX/UI â†’ Sviluppo & SEO â†’ Lancio & monitoraggio.`
    },
    { rx: /(manutenz|assistenza|supporto|sla|aggiornament[io])/,
      html: `Offriamo piani di <b>manutenzione/assistenza</b> con SLA e report. Backup, aggiornamenti, monitoraggio e fix di sicurezza. Scrivici da <a class="underline" href="${LINKS.contatti}">Contatti</a>.`
    },
    { rx: /(hosting|domini?o|server|migraz|trasfer|backup|sicurezz)/,
      html: `Gestiamo <b>hosting</b> ottimizzato, <b>dominio</b> e <b>migrazioni</b> senza perdita SEO. Backup automatici e hardening di sicurezza inclusi.`
    },
    { rx: /(pagament|rate|paypal|stripe|anticipo|acconto|fattur|iva)/,
      html: `Pagamenti sicuri (PayPal/Stripe). Di solito acconto + saldi a milestone; fattura regolare per ogni pagamento. Dettagli: <a class="underline" href="${LINKS.pagamenti}">Metodi di pagamento</a>.`
    },
    { rx: /(seo|posizion|local|maps|gmb|business\s*profile|recension)/,
      html: `Per il locale c'Ã¨ <b>Local SEO Booster</b>: ðŸ‘‰ <a class="underline" href="${LINKS.localSEO}">Scopri</a>`
    },
    { rx: /(core.*vitals|lcp|inp|cls|performance|velocit)/,
      html: `Pacchetto <b>Core Web Vitals Express</b> con analisi + fix e report pre/post. ðŸ‘‰ <a class="underline" href="${LINKS.cwv}">Dettagli</a>`
    },
    { rx: /(ga4|analytics|tag\s*manager|consent|cookie|gdpr|privacy)/,
      html: `Configuriamo <b>Consent Mode v2</b> + <b>GA4</b> con eventi chiave e viste pulite, conforme GDPR.`
    },
    { rx: /(wordpress|headless|statico|astro|cms)/,
      html: `Vuoi velocizzare WordPress? Guarda <b>WordPress Slim</b> ðŸ‘‰ <a class="underline" href="${LINKS.wpSlim}">Statico/Headless</a>.`
    },
    { rx: /(accessibilit|wcag|agid|disabil)/,
      html: `Adeguiamo <b>WCAG/AgID</b>. Vedi <a class="underline" href="${LINKS.access}">AccessibilitÃ  Avanzata</a>.`
    },
    { rx: /(logo|brand|branding|grafica)/,
      html: `Logo, palette e linee guida â†’ <a class="underline" href="${LINKS.branding}">Branding & Grafica</a>.`
    },
    { rx: /(testi|copy|contenut|foto|immagin|testuali)/,
      html: `Ti aiutiamo su testi SEO, microcopy e immagini.`
    },
    { rx: /(multi.?lingua|lingue|traduz)/,
      html: `Supportiamo siti <b>multi-lingua</b> (struttura, hreflang, switcher).`
    },
    { rx: /(e-?commerce|shop|carrello|checkout|spedizion|coupon|varianti|magazzino|fattur[ae]|invoic)/,
      html: `E-commerce: varianti, stock, coupon, spedizioni e pagamenti sicuri (PayPal/Stripe). Automazioni CRM/gestionale nei pacchetti Pro. Prezzi ðŸ‘‰ <a class="underline" href="${LINKS.prezziEcom}">qui</a>.`
    },
    { rx: /(portfolio|esempi|case\s*stud|lavori)/,
      html: `Alcuni lavori recenti ðŸ‘‰ <a class="underline" href="${LINKS.portfolio}">Portfolio</a>.`
    },
    { rx: /(formazion|training|corso|imparare|tutorial|manuale)/,
      html: `Offriamo <b>formazione</b> su CMS/Analytics/SEO con video e guide.`
    },
    { rx: /(contatt|telefono|chiam|appunt|call|numero|whatsapp)/,
      html: `ðŸ“ž <a class="underline" href="tel:+393403223494">340 322 3494</a> Â·
        WhatsApp ðŸ‘‰ <a class="underline" href="${document.getElementById('ls-chat-panel')?.dataset.wa || '#'}" target="_blank" rel="noopener">Apri</a><br>
        Oppure scrivici da <a class="underline" href="${LINKS.contatti}">Contatti</a>.`
    },
    { rx: /(serviz|cosa.*fate|offrit|aiutate)/,
      html: `Copriamo: siti web, e-commerce, SEO/Local, performance (CWV), branding, accessibilitÃ , tracciamenti/Consent, automazioni e <b>assistenti AI</b>.<br>
        Vedi tutto: <a class="underline" href="${LINKS.servizi}">Servizi</a>.`
    },
  ];

  function replyFor(q='') {
    const t = L(q);
    for (const i of INTENTS) if (i.rx.test(t)) return i.html;
    return `Ti rispondo subito o entro breve negli orari di lavoro.<br>
      Intanto puoi vedere:<br>
      ðŸ‘‰ <a class="underline" href="${LINKS.prezziSiti}">Siti Web</a> Â· <a class="underline" href="${LINKS.prezziEcom}">E-commerce</a>`;
  }

  function renderQuickByContext(renderQuick) {
    const path = location.pathname;
    let pills = ['Prezzi', 'Come posso contattarti', 'Servizi'];
    if (/e-?commerce/.test(path)) pills = ['Prezzi', 'Funzioni e-commerce', 'Pagamenti', 'Spedizioni'];
    else if (/ottimizzazione-seo|local-seo/.test(path)) pills = ['SEO', 'Local SEO', 'Core Web Vitals', 'Tempi'];
    else if (/assistente-ai/.test(path)) pills = ['Come funziona', 'Prezzi', 'WhatsApp', 'Web chatbot'];
    else if (/wordpress-slim/.test(path)) pills = ['Statico vs Headless', 'Migrazione', 'Tempi', 'Manutenzione'];
    renderQuick(pills);
  }

  // ===== Bind/logic =====
  function bindChat(){
    const root = document.getElementById('ls-chat-widget');
    if (!root) return;

    if (root.parentElement !== document.body) document.body.appendChild(root);
    root.style.zIndex = '99999';
    if (root.dataset.bound === '1') return;
    root.dataset.bound = '1';

    const panel  = document.getElementById('ls-chat-panel');
    const toggle = document.getElementById('ls-chat-toggle');
    const closeB = document.getElementById('ls-chat-close');

    const body     = document.getElementById('ls-chat-body');
    const messages = document.getElementById('ls-messages');
    const quick    = document.getElementById('ls-quick');
    const form     = document.getElementById('ls-composer');
    const input    = document.getElementById('ls-input');

    const gate     = document.getElementById('ls-gate');
    const nameI    = document.getElementById('ls-name');
    const emailI   = document.getElementById('ls-email');
    const saveProf = document.getElementById('ls-save-profile');

    const setOpen = (v)=>{ panel?.setAttribute('data-open', v?'true':'false'); panel?.classList.toggle('hidden', !v); STORE.open = !!v; persist(); };
    const isOpen  = ()=> panel?.getAttribute('data-open') === 'true';
    const scrollDown = ()=> { messages && (messages.scrollTop = messages.scrollHeight); };

    const renderQuick = (labels=[])=>{
      if (!quick) return;
      quick.innerHTML = '';
      labels.forEach(txt=>{
        const b = document.createElement('button');
        b.type = 'button';
        b.className = 'ls-pill hover:opacity-90 transition';
        b.textContent = txt;
        b.addEventListener('click', ()=> sendText(txt));
        quick.appendChild(b);
      });
    };

    const bot = (html)=>{ STORE.messages.push({ role:'bot', html }); persist();
      messages.insertAdjacentHTML('beforeend', `<div class="flex"><div class="ls-bubble ls-bot">${html}</div></div>`); scrollDown(); };

    const you = (text)=>{ STORE.messages.push({ role:'user', content:text }); persist();
      messages.insertAdjacentHTML('beforeend', `<div class="flex justify-end"><div class="ls-bubble ls-you">${escapeHtml(text)}</div></div>`); scrollDown(); };

    const renderFromStore = ()=>{
      messages.innerHTML = '';
      for (const m of STORE.messages) {
        if (m.role === 'user')
          messages.insertAdjacentHTML('beforeend', `<div class="flex justify-end"><div class="ls-bubble ls-you">${escapeHtml(m.content)}</div></div>`);
        else
          messages.insertAdjacentHTML('beforeend', `<div class="flex"><div class="ls-bubble ls-bot">${m.html}</div></div>`);
      }
      messages.querySelectorAll('a[href]').forEach(a => a.addEventListener('click', ()=>{
        if (isMobile()) setOpen(false); else { STORE.open = true; persist(); }
      }));
      scrollDown();
    };

    const needGate = () => (
      `${PUBLIC_CHAT_REQUIRE_EMAIL}` === 'true' &&
      !(STORE.profile && STORE.profile.email)
    );

    const initGateOrChat = ()=>{
      if (needGate()) {
        gate.classList.remove('hidden'); body.classList.add('hidden');
      } else {
        gate.classList.add('hidden'); body.classList.remove('hidden');
        if (STORE.messages.length === 0) bot("Ciao! ðŸ‘‹ Come posso aiutarti?");
        else renderFromStore();
        renderQuickByContext(renderQuick);
      }
    };

    const openPanel  = ()=> { setOpen(true); initGateOrChat(); };
    const closePanel = ()=> setOpen(false);

    toggle?.addEventListener('click', ()=> isOpen()? closePanel(): openPanel());
    closeB?.addEventListener('click', closePanel);
    document.addEventListener('click', (e)=>{ if (isOpen() && !root.contains(e.target)) closePanel(); });

    // Salva profilo
    saveProf?.addEventListener('click', ()=>{
      const name  = (nameI?.value || '').trim();
      const email = (emailI?.value || '').trim();
      if (!name || !/.+@.+\..+/.test(email)) { alert('Inserisci nome ed email validi.'); return; }
      STORE.profile = { name, email }; STORE.messages = []; persist();
      gate.classList.add('hidden'); body.classList.remove('hidden');
      bot(`Ciao ${escapeHtml(name)}! ðŸ‘‹ Come posso aiutarti?`);
      renderQuickByContext(renderQuick);
    });

    function sendText(text){
      if (!text) return;
      you(text);
      const html = replyFor(text);
      bot(html);
      renderQuickByContext(renderQuick);
      const prof = STORE.profile || {};
      fetch('/api/lead', {
        method:'POST', headers:{'content-type':'application/json'},
        body: JSON.stringify({ channel:'web', name: prof.name || 'Chat user', email: prof.email || undefined, message: text, meta:{ source:'chat-assistant', path: location.pathname }})
      }).catch(()=>{});
    }

    form?.addEventListener('submit', (e)=>{ e.preventDefault(); const msg = (input?.value || '').trim(); if (input) input.value=''; sendText(msg); });

    // Riapri al mount SOLO desktop se era lasciata aperta
    if (STORE.open && !isMobile()) { setOpen(true); initGateOrChat(); renderFromStore(); }

    // Chiudi su cambio pagina in mobile
    const closeOnNavIfMobile = ()=> { if (isMobile()) setOpen(false); };
    document.addEventListener('astro:after-swap', closeOnNavIfMobile);
    document.addEventListener('astro:page-load', closeOnNavIfMobile);
    mqMobile.addEventListener?.('change', e => { if (e.matches) setOpen(false); });
  }

  document.addEventListener('astro:page-load', bindChat);
  document.addEventListener('astro:after-swap', bindChat);
  if (document.readyState !== 'loading') bindChat(); else document.addEventListener('DOMContentLoaded', bindChat);
</script>